// Code generated by "stringer -type=VialCommand"; DO NOT EDIT.

package usbvial

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VialCmdGetKeyboardID-0]
	_ = x[VialCmdGetSize-1]
	_ = x[VialCmdGetDef-2]
	_ = x[VialCmdGetEncoder-3]
	_ = x[VialCmdSetEncoder-4]
	_ = x[VialCmdGetUnlockStatus-5]
	_ = x[VialCmdUnlockStart-6]
	_ = x[VialCmdUnlockPoll-7]
	_ = x[VialCmdLock-8]
	_ = x[VialCmdQmkSettingsQuery-9]
	_ = x[VialCmdQmkSettingsGet-10]
	_ = x[VialCmdQmkSettingsSet-11]
	_ = x[VialCmdQmkSettingsReset-12]
	_ = x[VialCmdDynamicEntryOp-13]
}

const _VialCommand_name = "VialCmdGetKeyboardIDVialCmdGetSizeVialCmdGetDefVialCmdGetEncoderVialCmdSetEncoderVialCmdGetUnlockStatusVialCmdUnlockStartVialCmdUnlockPollVialCmdLockVialCmdQmkSettingsQueryVialCmdQmkSettingsGetVialCmdQmkSettingsSetVialCmdQmkSettingsResetVialCmdDynamicEntryOp"

var _VialCommand_index = [...]uint16{0, 20, 34, 47, 64, 81, 103, 121, 138, 149, 172, 193, 214, 237, 258}

func (i VialCommand) String() string {
	if i >= VialCommand(len(_VialCommand_index)-1) {
		return "VialCommand(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VialCommand_name[_VialCommand_index[i]:_VialCommand_index[i+1]]
}
