// Code generated by "stringer -type=ViaCommand"; DO NOT EDIT.

package vial

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ViaCmdGetProtocolVersion-1]
	_ = x[ViaCmdGetKeyboardValue-2]
	_ = x[ViaCmdSetKeyboardValue-3]
	_ = x[ViaCmdDynamicKeymapGetKeycode-4]
	_ = x[ViaCmdDynamicKeymapSetKeycode-5]
	_ = x[ViaCmdDynamicKeymapReset-6]
	_ = x[ViaCmdLightingSetValue-7]
	_ = x[ViaCmdLightingGetValue-8]
	_ = x[ViaCmdLightingSave-9]
	_ = x[ViaCmdEepromReset-10]
	_ = x[ViaCmdBootloaderJump-11]
	_ = x[ViaCmdKeymapMacroGetCount-12]
	_ = x[ViaCmdKeymapMacroGetBufferSize-13]
	_ = x[ViaCmdKeymapMacroGetBuffer-14]
	_ = x[ViaCmdKeymapMacroSetBuffer-15]
	_ = x[ViaCmdKeymapMacroReset-16]
	_ = x[ViaCmdKeymapGetLayerCount-17]
	_ = x[ViaCmdKeymapGetBuffer-18]
	_ = x[ViaCmdKeymapSetBuffer-19]
	_ = x[ViaCmdVialPrefix-254]
	_ = x[ViaCmdUnhandled-255]
}

const (
	_ViaCommand_name_0 = "ViaCmdGetProtocolVersionViaCmdGetKeyboardValueViaCmdSetKeyboardValueViaCmdDynamicKeymapGetKeycodeViaCmdDynamicKeymapSetKeycodeViaCmdDynamicKeymapResetViaCmdLightingSetValueViaCmdLightingGetValueViaCmdLightingSaveViaCmdEepromResetViaCmdBootloaderJumpViaCmdKeymapMacroGetCountViaCmdKeymapMacroGetBufferSizeViaCmdKeymapMacroGetBufferViaCmdKeymapMacroSetBufferViaCmdKeymapMacroResetViaCmdKeymapGetLayerCountViaCmdKeymapGetBufferViaCmdKeymapSetBuffer"
	_ViaCommand_name_1 = "ViaCmdVialPrefixViaCmdUnhandled"
)

var (
	_ViaCommand_index_0 = [...]uint16{0, 24, 46, 68, 97, 126, 150, 172, 194, 212, 229, 249, 274, 304, 330, 356, 378, 403, 424, 445}
	_ViaCommand_index_1 = [...]uint8{0, 16, 31}
)

func (i ViaCommand) String() string {
	switch {
	case 1 <= i && i <= 19:
		i -= 1
		return _ViaCommand_name_0[_ViaCommand_index_0[i]:_ViaCommand_index_0[i+1]]
	case 254 <= i && i <= 255:
		i -= 254
		return _ViaCommand_name_1[_ViaCommand_index_1[i]:_ViaCommand_index_1[i+1]]
	default:
		return "ViaCommand(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
