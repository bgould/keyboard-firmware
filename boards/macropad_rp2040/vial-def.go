// This file is auto-generated by github.com/bgould/keyboard-firmware/hosts/usbvial/gen-def, do not edit.
package macropad_rp2040

import "github.com/bgould/keyboard-firmware/hosts/usbvial/vial"

var VialDeviceDefinition = vial.DeviceDefinition{
	Name:      "tinygo-macropad-rp2040",
	VendorID:  "0x239A",
	ProductID: "0x8107",
	Lighting:  "vialrgb",
	Matrix: vial.DeviceMatrix{
		Rows: 1,
		Cols: 16,
	},
	LzmaDefLength: uint16(len(vialLzmaDefinition)),
	LzmaDefWriter: vial.LzmaDefPageWriterFunc(vialWriteLzmaDefPage),
}

var vialLzmaDefinition = []byte{
	0x5D, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3D, 0x83, 0x3D, 0x41, 0xED, 0x00, 0xD2, 0xB5, 0x89, 0xBA, 0x41, 0x02, 0x3A, 0x6C, 0x77, 0xE9, 0x20, 0x45, 0x3A, 0xAA, 0xED, 0x04, 0xF3, 0x99, 0x51, 0x8F, 0x02, 0x55, 0x05, 0xA4, 0xDB, 0x4A, 0x8F, 0x9A, 0x71, 0x70, 0x7C, 0x24, 0x05, 0xE4, 0xDE, 0x4B, 0x31, 0xE2, 0xE7, 0x95, 0xEF, 0x44, 0xEC, 0xC1, 0x8B, 0x42, 0xC2, 0xEF, 0x16, 0x3C, 0x68, 0x13, 0x08, 0xC7, 0x4C, 0x7A, 0x15, 0x57, 0xE8, 0x15, 0x82, 0x9D, 0x78, 0x18, 0x30, 0x15, 0x1B, 0x05, 0x08, 0xCE, 0x1B, 0xA8, 0x20, 0x64, 0x35, 0xF9, 0x17, 0x54, 0x41, 0xC7, 0x5C, 0x27, 0x9A, 0xFD, 0xF1, 0x70, 0x98, 0x0D, 0x12, 0x59, 0x50, 0x76, 0xB8, 0x44, 0x42, 0x08, 0xD4, 0x6D, 0xB2, 0xAB, 0x1D, 0x30, 0x01, 0xD0, 0x99, 0xC1, 0xB6, 0x88, 0xBD, 0x34, 0x1F, 0x5B, 0x4A, 0x3F, 0xCE, 0x27, 0xB8, 0xCF, 0x76, 0xB9, 0xD0, 0xDD, 0xAD, 0x2D, 0x79, 0x51, 0x5C, 0x49, 0x4B, 0x26, 0x92, 0x51, 0xDC, 0x76, 0xE9, 0x59, 0x39, 0x70, 0x79, 0x3C, 0x7D, 0x68, 0x65, 0x2B, 0x43, 0x8B, 0xE2, 0x4B, 0x43, 0xC3, 0xD4, 0xD9, 0xFC, 0xDC, 0xB7, 0x21, 0xD9, 0x29, 0x83, 0x5F, 0x87, 0x86, 0x45, 0xFF, 0xB0, 0xCE, 0x33, 0xC6, 0x1F, 0xAF, 0x42, 0x44, 0x5A, 0xAD, 0x1D, 0xA3, 0x17, 0x90, 0x20, 0x70, 0x4A, 0x7D, 0x41, 0xC4, 0x0B, 0x41, 0x11, 0x16, 0x99, 0x42, 0xC2, 0x11, 0x16, 0xF3, 0x9B, 0xAF, 0x85, 0x25, 0x97, 0xBE, 0x16, 0x1A, 0xC9, 0x56, 0xA9, 0x0B, 0xD0, 0x17, 0x33, 0xEF, 0x3D, 0x73, 0xCC, 0xF0, 0x87, 0x3D, 0x34, 0xBA, 0xAA, 0x6F, 0x01, 0x50, 0x57, 0xEC, 0x45, 0xBB, 0x3C, 0x0E, 0x70, 0x02, 0x84, 0xFD, 0x9A, 0xA0, 0xA5, 0x6F, 0xD1, 0xDA, 0x9F, 0xFE, 0x47, 0x5E, 0xB1,
}

func vialWriteLzmaDefPage(tx []byte, page uint16) bool {
	start := page * 32
	end := start + 32
	len := uint16(len(vialLzmaDefinition))
	if end < start || start >= len {
		return false
	}
	if end > len {
		end = len
	}
	copy(tx[:32], vialLzmaDefinition[start:end])
	return true
}
